# Configure receivers
# We only need otlp protocol on grpc, but you can use http, zipkin, jaeger, aws, etc.
# https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/receiver
receivers:
  otlp:
    protocols:
      grpc:
      http:

# Configure exporters
exporters:
    #format: proto
  azuremonitor:
    endpoint: "https://dc.services.visualstudio.com/v2/track"
    instrumentation_key: "<<YOUR INSTRUMENTATION KEY>>"
    # maxbatchsize is the maximum number of items that can be
    # queued before calling to the configured endpoint
    maxbatchsize: 100
    # maxbatchinterval is the maximum time to wait before calling
    # the configured endpoint.
    maxbatchinterval: 10s

  # Export to a file
  file:
    path: /etc/output/logs.json

# Configure processors (batch, sampling, filtering, hashing sensitive data, etc.)
# https://opentelemetry.io/docs/collector/configuration/#processors
processors:
  batch:

# Configure pipelines. Pipeline defines a path the data follows in the Collector
# starting from reception, then further processing or modification and finally
# exiting the Collector via exporters.
# https://opentelemetry.io/docs/collector/configuration/#service
# https://github.com/open-telemetry/opentelemetry-collector/blob/main/docs/design.md#pipelines
service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [azuremonitor, file]
    #metrics:
    #  receivers: [otlp]
    #  processors: [batch]
    #  exporters: [logging, prometheus]
    logs:
      receivers: [otlp]
      processors: [batch]
      exporters: [azuremonitor, file]